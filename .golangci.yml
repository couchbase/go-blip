# Copyright 2020-Present Couchbase, Inc.
#
# Use of this software is governed by the Business Source License included in
# the file licenses/BSL-Couchbase.txt.  As of the Change Date specified in that
# file, in accordance with the Business Source License, use of this software
# will be governed by the Apache License, Version 2.0, included in the file
# licenses/APL2.txt.

# config file for golangci-lint

linters:
  enable:
    #- bodyclose # checks whether HTTP response body is closed successfully
    - dupl # Tool for code clone detection
    - errcheck # Errcheck is a program for checking for unchecked errors in go programs. These unchecked errors can be critical bugs in some cases
    # - goconst # Finds repeated strings that could be replaced by a constant
    #- gocritic # The most opinionated Go source code linter
    - goimports # Goimports does everything that gofmt does. Additionally it checks unused imports
    #- goprintffuncname # Checks that printf-like functions are named with `f` at the end
    #- gosec # (gas) Inspects source code for security problems
    #- gosimple # (megacheck) Linter for Go source code that specializes in simplifying a code
    - govet # (vet, vetshadow) Vet examines Go source code and reports suspicious constructs, such as Printf calls whose arguments do not align with the format string
    - ineffassign # Detects when assignments to existing variables are not used
    - misspell # Finds commonly misspelled English words in comments
    - nakedret # Finds naked returns in functions greater than a specified function length
    - prealloc # Finds slice declarations that could potentially be preallocated
    #- revive # Golint differs from gofmt. Gofmt reformats Go source code, whereas golint prints out style mistakes
    - staticcheck # (megacheck) Staticcheck is a go vet on steroids, applying a ton of static analysis checks
    - typecheck # Like the front-end of a Go compiler, parses and type-checks Go code
    #- unconvert # Remove unnecessary type conversions
    - unparam # Reports unused function parameters
    #- unused # (megacheck) Checks Go code for unused constants, variables, functions and types
  disable:
    - gosimple # (megacheck) Linter for Go source code that specializes in simplifying a code
    - unused # (megacheck) Checks Go code for unused constants, variables, functions and types

# Don't enable fieldalignment, changing the field alignment requires checking to see if anyone uses constructors
# without names. If there is a memory issue on a specific field, that is best found with a heap profile.
#linters-settings:
#  govet:
#    enable:
#      - fieldalignment # detect Go structs that would take less memory if their fields were sorted

# Disable goconst in test files, often we have duplicated strings across tests, but don't make sense as constants.
issues:
  exclude-rules:
    - path: (_test\.go|utilities_testing\.go)
      linters:
        - goconst
